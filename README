							Jude CSE 241 Project

Project Overview: Database for a store
- I gained experience in the conceptual design, logical design, implementation, operation, and maintenance of a relational database and associated applications.
- This project allowed me to apply database theory to a theoretical business needs by creating a database from scratch.
- This interface offers 7 features to access data stored in 10 entity sets on oracle. Fake data is created and uploaded to mimic
a retailer that would offer products for both online shopping and physical stores.  

Skills I learned: JDBC
- How to create a oracle database using SQL/PL with primary/forign keys, constraints, auto index for primary key features, implement triggers, etc. 
- How to use Java Database Connectivity to interact with an oracle database while maintaining ACID properties. 
- When to set auto commit to true/false.
- Connections, statements, prepared statements, results sets and more. 
- Methods to reduce overheard - like batch insertions, testing for connection speeds, pass connection as param, close statements when done.  

Skills I practiced: OOP
- Fundamentals: ArrayLists, Forcing good user input with Java, Exception handling. 
- Abstraction of complex tasks: the customer cart > shopping > checkout interface code was complex and lend itself to abstraction 
- Inheritance saved me a lot of work by compiling my helper functions in a superclass 
- Use of overloaded classes for different data types to print to the user, get input, and retrieve data from result sets etc.

Things I would change if I had more time: 
  - I would add more wrapped JDBC system function calls to my super class, this would minimize the need of try-catch statements in my interface coding for clean code.
  - Spend more time testing the use of overhear, replace one or two prepared statements with statements to get faster run time. 
  
This is my interface layout: 

	Analytics Manager Interface
		- rank states by customer density
 		- rank procuts by net sales revenue 

	Product Manager Interface
		- change product's price listing  
		- order more inventory for products

	Create New Customer Interface
		- uploads new customer profile
		
	Existing Customer Interface 
		- create new order
                - view past orders 

Walk through of Analytics Manager: 
 - Just press 'a' to open the interface. 
 - These are regular statements
 - Press the numbers 1, 2 to query, 3 to exit 

Walk through of Product Manager Interface
 - press 'b' to enter this interface
 - enter your store id, which is numbers 1-6, enter 1 for example 
 - press 1 to modify price of product
 - enter '500' for ex
 - enter a positive decimal number or int to set new price 
 - press 2 to order more inventory of product 
 - enter a int for product id, like 500 
 - enter how many of this to buy more, try 12, this will add to the existing stock
 
walk through of Existing Customer Login
 - your customer is is between 1 and 101 
 - try 1
 - enter 1 to shop online for stores
 - press 'a' or 'A' to create new order
 - now categories are displayed, once you add a item, you cannot remove it from cart(for simplicity)
 - pick '2' for tech product category 
 - pick '1' for electronics department 
 - now products are displayed, pick 5 for example 
 - enter 'y' or 'n' for another product, which will go through the past few steps again
   and add another item to your cart. try it out! 20 is max items in cart. 
 - enter 'n' once done shopping 
 - because store 1 is a online store, I prompt for credit cards only 
 - enter your card number with no spaces or '-'
 - pick shipping option, this affects the shipping date I calculate later on. '1' or '2'
 - your order is submitted

To compile source code:
	javac jbg223/* .java
To create executable: 
	jar cfmv jbg223.jar Manifest.txt Interface.class manager.class managerView.class customerInsert.class customerView.class basic.class managerInsert.class 
To run executable:
	java -jar jbg223.jar
